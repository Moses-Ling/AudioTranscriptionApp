﻿﻿﻿﻿﻿﻿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AudioTranscriptionApp.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.13.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ApiKey {
            get {
                return ((string)(this["ApiKey"]));
            }
            set {
                this["ApiKey"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int ChunkDurationSeconds {
            get {
                return ((int)(this["ChunkDurationSeconds"]));
            }
            set {
                this["ChunkDurationSeconds"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string DefaultSavePath {
            get {
                return ((string)(this["DefaultSavePath"]));
            }
            set {
                this["DefaultSavePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string CleanupApiKey {
            get {
                return ((string)(this["CleanupApiKey"]));
            }
            set {
                this["CleanupApiKey"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("gpt-4o-mini")]
        public string CleanupModel {
            get {
                return ((string)(this["CleanupModel"]));
            }
            set {
                this["CleanupModel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"You are a professional transcription editor. Your task is to take a raw speech-to-text transcription of a meeting and turn it into a clean, readable text suitable for summarization. The transcription does not indicate who is speaking, and the speech-to-text engine may contain errors. Use the following guidelines:
Use context to clarify meaning: Correct misheard or misspelled words using the surrounding context. Where needed, use your best judgment to infer what was likely said.
Structure and clarity: Break the transcript into clear paragraphs based on shifts in topic or speaker, even though speaker labels are not available.
Remove filler and backchanneling: Eliminate filler words like ""uh,"" ""um,"" ""you know,"" ""like,"" and short interjections such as ""yeah,"" ""mm-hmm,"" ""ah,"" etc., unless essential to the meaning.
Preserve meaning: Do not rewrite or summarize. Keep the content and flow intact—just clean up grammar, punctuation, and formatting.
Note unclear areas: If a sentence doesn't make sense or you had to make a guess to fix it, add a comment at the end of the line in brackets, e.g., [Unclear: possibly meant... ].
Output two sections:
Clean Transcript – The cleaned-up version ready for summarization.
Editor Notes – A list of sentences or phrases that were unclear or required assumption/guesswork, along with a brief note.")]
        public string CleanupPrompt {
            get {
                return ((string)(this["CleanupPrompt"]));
            }
            set {
                this["CleanupPrompt"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SummarizeApiKey {
            get {
                return ((string)(this["SummarizeApiKey"]));
            }
            set {
                this["SummarizeApiKey"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("gpt-4o")] // Changed default
        public string SummarizeModel {
            get {
                return ((string)(this["SummarizeModel"]));
            }
            set {
                this["SummarizeModel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Summarize the following meeting transcript by identifying the key discussion points, action items, decisions made, and any follow-up tasks. Keep the summary concise and structured, using bullet points or sections if necessary. Focus on clarity and relevance.")]
        public string SummarizePrompt {
            get {
                return ((string)(this["SummarizePrompt"]));
            }
            set {
                this["SummarizePrompt"] = value;
            }
        }
    }
}
